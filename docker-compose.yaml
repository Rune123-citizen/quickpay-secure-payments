
version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: payflow_db
      POSTGRES_USER: payflow_user
      POSTGRES_PASSWORD: payflow_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payflow_user -d payflow_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: payflow
      MONGO_INITDB_ROOT_PASSWORD: payflow123
    volumes:
      - mongo_data:/data/db

  # Message Queue
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Vault for secrets management
  vault:
    image: vault:latest
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: payflow-dev-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    command: vault server -dev

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-svc
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-key
      - OTP_SERVICE_URL=http://notif-service:3000
    depends_on:
      - redis
      - kafka
    volumes:
      - ./services/auth-svc:/app
      - /app/node_modules

  # User Service
  user-service:
    build:
      context: ./services/user-svc
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://payflow_user:payflow_pass@postgres:5432/payflow_db
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./services/user-svc:/app
      - /app/node_modules

  # Transaction Service
  txn-service:
    build:
      context: ./services/txn-svc
      dockerfile: Dockerfile.dev
    ports:
      - "3003:8080"
    environment:
      - DATABASE_URL=postgresql://payflow_user:payflow_pass@postgres:5432/payflow_db
      - KAFKA_BROKER=kafka:9092
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=payflow-dev-token
    depends_on:
      - postgres
      - kafka
      - vault

  # Notification Service
  notif-service:
    build:
      context: ./services/notif-svc
      dockerfile: Dockerfile
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://payflow:payflow123@mongodb:27017/notifications?authSource=admin
      - KAFKA_BROKER=kafka:9092
      - SMS_API_KEY=dev-sms-key
    depends_on:
      - mongodb
      - kafka

  # Balance Service
  balance-service:
    build:
      context: ./services/balance-svc
      dockerfile: Dockerfile.dev
    ports:
      - "3005:8080"
    environment:
      - DATABASE_URL=postgresql://payflow_user:payflow_pass@postgres:5432/payflow_db
      - UPI_GATEWAY_URL=http://localhost:8090
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
  mongo_data:
